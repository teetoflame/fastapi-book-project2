name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          docker build -t teeto-fastapi .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Tag Docker Image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker tag teeto-fastapi ${{ secrets.DOCKER_USERNAME }}/teeto-fastapi:$IMAGE_TAG
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/teeto-fastapi:${{ env.IMAGE_TAG }}

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Deploy to EC2
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
            sudo usermod -aG docker $USER || true  # Add user to Docker group if not already added
            newgrp docker || true                  # Refresh group membership
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/teeto-fastapi:${{ env.IMAGE_TAG }}
            sudo docker stop teeto-fastapi || true
            sudo docker rm teeto-fastapi || true
            sudo docker run -d -p 8100:8100 --name teeto-fastapi ${{ secrets.DOCKER_USERNAME }}/teeto-fastapi:${{ env.IMAGE_TAG }}
          EOF

      - name: Check Deployment Health
        run: |
          for i in {1..10}; do
            curl -f http://${{ secrets.DEPLOYMENT_URL }}/healthcheck && exit 0 || echo "Waiting for app..."
            sleep 5
          done
          echo "App failed to start" && exit 1

      - name: Debug Logs on Failure
        if: failure()
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
            docker logs teeto-fastapi
          EOF
